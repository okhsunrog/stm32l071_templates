[package]
edition = "2021"
name = "stm32l071_templates"
version = "0.1.0"

[dependencies]
cortex-m = { version = "0.7.7", features = [
    "inline-asm",
    "critical-section-single-core",
] }
cortex-m-rt = "0.7.5"
defmt = { version = "0.3.10", optional = true }
defmt-rtt = { version = "0.4.1", optional = true }
log = { version = "0.4.25", optional = true }
embassy-futures = "0.1.1"
embassy-stm32 = { version = "0.2.0", features = [
    "memory-x",
    "stm32l071c8",
    "time-driver-any",
    "exti",
    "unstable-pac",
] }
embassy-executor = { version = "0.7.0", features = [
    "arch-cortex-m",
    "executor-thread",
    "defmt",
] }
embassy-sync = "0.6.2"
embassy-time = { version = "0.4.0", features = ["tick-hz-32_768"] }
panic-halt = "1.0.0"
panic-probe = { version = "0.3.2", features = ["print-defmt"], optional = true }
embedded-io = { version = "0.6.1" }
embedded-hal = "1.0.0"

[[bin]]
name = "hello"
path = "src/bin/hello.rs"
test = false
bench = false

[profile.dev]
debug = true
lto = true
opt-level = "z"
incremental = true

[profile.release]
# note: debug = true is okay - debuginfo isn't flashed to the device!
# in fact, after disabling it the binary size could be somehow larger
debug = true
lto = "fat"
# set to true to save some more space, don't enable when using defmt
strip = false
codegen-units = 1 # Allows LLVM to perform better optimization.
opt-level = "z" # sometimes s is better, sometimes z, test every time for the best size
incremental = true # don't disable, the size is smaller with it

[features]
defmt = ["dep:defmt"]
defmt-rtt = ["dep:defmt-rtt"]
panic-probe = ["dep:panic-probe"]
default = ["debug"]
debug = [
    "defmt",
    "defmt-rtt",
    "panic-probe",
    "embassy-executor/defmt",
    "embassy-sync/defmt",
    "embassy-futures/defmt",
    "embassy-time/defmt",
    "embassy-time/defmt-timestamp-uptime",
    "embassy-stm32/defmt",
]
log = ["dep:log"]
